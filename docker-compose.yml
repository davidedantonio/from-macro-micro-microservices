---
  version: '3.6'
  services:
    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
      container_name: elasticsearch-web
      environment:
        - discovery.type=single-node
        - ES_JAVA_OPTS=-Xms1g -Xmx1g
      ulimits:
        memlock:
          soft: -1
          hard: -1
        nofile:
          soft: 65536
          hard: 65536
      ports:
        - "9200:9200"
      healthcheck:
        test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health | grep -v '\"status\":\"red\"'"]
        
    kibana:
      image: docker.elastic.co/kibana/kibana:7.6.0
      container_name: kibana-web
      environment:
        ELASTICSEARCH_URL: http://elasticsearch:9200
      ports:
        - "5601:5601"
      healthcheck:
        test: ["CMD", "curl", "-f", "http://kibana:5601/"]
      depends_on:
        - elasticsearch
    
    apm-server:
      image: docker.elastic.co/apm/apm-server:7.6.0
      container_name: apm-server
      ports:
        - "8200:8200"
      environment:
        - output.elasticsearch.hosts=['http://elasticsearch:9200']
        - apm-server.host="0.0.0.0:8200"
        - setup.kibana.host="kibana:5601"
      command: apm-server -e -d "*" -E apm-server.host="0.0.0.0:8200" -E apm-server.expvar.enabled=true
      depends_on:
        - elasticsearch
        - kibana
      healthcheck:
        test: ["CMD", "curl", "-f" ,"http://apm-server:8200/"]
  
    mongodb-web:
      image: mongo:latest
      container_name: mongodb-web
      ports:
        - "27017:27017"
      expose: 
        - "27017"
  
    gateway-service:
      container_name: gateway-service
      restart: always
      build: ./gateway
      command: ["npm", "run", "dev"]
      ports:
        - "3000:3000"
      expose:
        - "3000"
      environment:
        - FASTIFY_PORT=3000
      volumes:
        - ./gateway/:/usr/src/app
        - /usr/src/app/node_modules
      links:
        - apm-server
        - tickets-service
        - auth-service
        - users-service
    
    auth-service:
      container_name: auth-service
      restart: always
      build: ./auth
      command: ["npm", "run", "dev"]
      ports:
        - "3001:3001"
      environment:
        - FASTIFY_PORT=3001
      volumes:
        - ./auth/:/usr/src/app
        - /usr/src/app/node_modules
      links:
      - apm-server
      - mongodb-web
  
    tickets-service:
      container_name: tickets-service
      restart: always
      build: ./tickets
      command: ["npm", "run", "dev"]
      ports:
        - "3002:3002"
      environment:
        - FASTIFY_PORT=3002
      volumes:
        - ./tickets/:/usr/src/app
        - /usr/src/app/node_modules
      links:
      - apm-server
      - mongodb-web

    users-service:
      container_name: users-service
      restart: always
      build: ./users
      command: ["npm", "run", "dev"]
      ports:
        - "3003:3003"
      environment:
        - FASTIFY_PORT=3003
      volumes:
        - ./users/:/usr/src/app
        - /usr/src/app/node_modules
      links:
      - apm-server
      - mongodb-web
  